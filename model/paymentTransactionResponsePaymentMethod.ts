/**
 * ManageSpace Payment API
 * ManageSpace Payment API Documentation
 *
 * The version of the OpenAPI document: 0.0.11-dev
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { RequestFile } from './models';

/**
* Payment method if payment has been attempted, null otherwise
*/
export class PaymentTransactionResponsePaymentMethod {
    /**
    * Payment Method ID.
    */
    'paymentMethodId': string;
    /**
    * Payment provider ID associated with this payment method.
    */
    'paymentProviderId': string;
    /**
    * Last four digits of payment method.
    */
    'lastFourDigits': number;
    /**
    * Expiry month.
    */
    'expiryMonth': number;
    /**
    * Expiry year.
    */
    'expiryYear': number;
    /**
    * Brand
    */
    'brand': PaymentTransactionResponsePaymentMethod.BrandEnum;
    /**
    * Type of the card/payment method
    */
    'type': PaymentTransactionResponsePaymentMethod.TypeEnum;
    /**
    * Account ID.
    */
    'accountId': string;
    /**
    * Payment provider ID associated with this accountId.
    */
    'customerPaymentProviderId': string;
    /**
    * Org ID.
    */
    'orgId': string;
    /**
    * Whether or not this payment method is default for the customer.
    */
    'isDefault': boolean;

    static discriminator: string | undefined = undefined;

    static attributeTypeMap: Array<{name: string, baseName: string, type: string}> = [
        {
            "name": "paymentMethodId",
            "baseName": "paymentMethodId",
            "type": "string"
        },
        {
            "name": "paymentProviderId",
            "baseName": "paymentProviderId",
            "type": "string"
        },
        {
            "name": "lastFourDigits",
            "baseName": "lastFourDigits",
            "type": "number"
        },
        {
            "name": "expiryMonth",
            "baseName": "expiryMonth",
            "type": "number"
        },
        {
            "name": "expiryYear",
            "baseName": "expiryYear",
            "type": "number"
        },
        {
            "name": "brand",
            "baseName": "brand",
            "type": "PaymentTransactionResponsePaymentMethod.BrandEnum"
        },
        {
            "name": "type",
            "baseName": "type",
            "type": "PaymentTransactionResponsePaymentMethod.TypeEnum"
        },
        {
            "name": "accountId",
            "baseName": "accountId",
            "type": "string"
        },
        {
            "name": "customerPaymentProviderId",
            "baseName": "customerPaymentProviderId",
            "type": "string"
        },
        {
            "name": "orgId",
            "baseName": "orgId",
            "type": "string"
        },
        {
            "name": "isDefault",
            "baseName": "isDefault",
            "type": "boolean"
        }    ];

    static getAttributeTypeMap() {
        return PaymentTransactionResponsePaymentMethod.attributeTypeMap;
    }
}

export namespace PaymentTransactionResponsePaymentMethod {
    export enum BrandEnum {
        AmericanExpress = <any> 'American Express',
        DinersClub = <any> 'Diners Club',
        Discover = <any> 'Discover',
        EftposAustralia = <any> 'Eftpos Australia',
        Jcb = <any> 'JCB',
        MasterCard = <any> 'MasterCard',
        UnionPay = <any> 'UnionPay',
        Visa = <any> 'Visa',
        Unknown = <any> 'Unknown'
    }
    export enum TypeEnum {
        Credit = <any> 'credit',
        Debit = <any> 'debit',
        Prepaid = <any> 'prepaid',
        Unknown = <any> 'unknown'
    }
}
